CREATE DATABASE reviews_service_db;
USE reviews_service_db;

CREATE TABLE IF NOT EXISTS Role (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS Category (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS Users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    Role_id INT NOT NULL,
    FOREIGN KEY (Role_id) REFERENCES Role(id) ON DELETE CASCADE,
    nickname VARCHAR(32) NOT NULL,
    email VARCHAR(32) NOT NULL,
    password VARCHAR (32) NOT NULL, 
    register_datetime DATETIME NOT NULL, 
    last_login_datetime DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS Review (
    id INT PRIMARY KEY AUTO_INCREMENT,
    Category_id INT NULL,
    header VARCHAR(128) NOT NULL, 
    creation_time DATETIME NOT NULL,
    FOREIGN KEY (Category_id) REFERENCES Category(id) ON DELETE CASCADE,
    text VARCHAR(4096) NOT NULL
);

CREATE TABLE IF NOT EXISTS ReviewAndUser (
    id INT PRIMARY KEY AUTO_INCREMENT,
    User_id INT NOT NULL,
    Review_id INT NOT NULL,
    FOREIGN KEY (User_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (Review_id) REFERENCES Review(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Rating (
    id INT PRIMARY KEY AUTO_INCREMENT,
    grade TINYINT UNSIGNED NOT NULL,
    User_id INT NOT NULL,
    Review_id INT NOT NULL,
    FOREIGN KEY (User_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (Review_id) REFERENCES REview(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Comment (
    id INT PRIMARY KEY AUTO_INCREMENT,
    text VARCHAR(2048) NOT NULL,
    User_id INT NOT NULL,
    Review_id INT NOT NULL,
    FOREIGN KEY (User_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (Review_id) REFERENCES Review(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Logs (
    id INT PRIMARY KEY AUTO_INCREMENT,
    User_id INT NOT NULL,
    datetime DATETIME NOT NULL,
    type VARCHAR(16) NOT NULL,
    representation VARCHAR(256) NOT NULL
);

CREATE TABLE IF NOT EXISTS Archive (
    id INT PRIMARY KEY AUTO_INCREMENT,
    User_id INT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS ReviewAndArchive (
    id INT PRIMARY KEY AUTO_INCREMENT,
    Review_id INT NOT NULL,
    Archive_id INT NOT NULL,
    FOREIGN KEY (Review_id) REFERENCES Review(id),
    FOREIGN KEY (Archive_id) REFERENCES Archive(id)
);

DROP TABLE Logs;